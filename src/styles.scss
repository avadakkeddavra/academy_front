body{
    font-family: 'Roboto', sans-serif;
}
button{
    &.btn.small, &.btn-flat.small{
        padding: 0px 10px !important;
        font-size: 13px;
    }

}
span.badge{
    min-width: 20px !important;
    font-weight: bold !important;
}
.mce-textbox{
    background: #fff !important;
    border: 1px solid #c5c5c5 !important;
    -webkit-box-shadow: none !important;
    -moz-box-shadow: none !important;
    box-shadow: none !important;
    display: inline-block !important;
    -webkit-transition: border linear .2s, box-shadow linear .2s !important;
    transition: border linear .2s, box-shadow linear .2s !important;
    height: 28px !important;
    padding: 0 4px 0 4px !important;
    color: #595959;
    margin: 0px !important;
    font-size: 14px !important;
    outline: none !important;
    box-sizing: border-box !important;
}
.mce-window{
    width: 500px !important;
}


.gu-mirror {
  position: fixed !important;
  margin: 0 !important;
  z-index: 9999 !important;
  opacity: 0.8;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter: alpha(opacity=80);
  pointer-events: none;
  list-style: none !important;
}
/* high-performance display:none; helper */
.gu-hide {
  left: -9999px !important;
}
/* added to mirrorContainer (default = body) while dragging */
.gu-unselectable {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
}
/* added to the source element while its mirror is dragged */
.gu-transit {
  opacity: 0.2;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
  filter: alpha(opacity=20);
}
